const abi = [
  'constructor()',
  'function ADDRESSES_PROVIDER() view returns (address)',
  'function POOL() pure returns (address)',
  'function _availableMargin() view returns (uint256 totalManagedAssets)',
  'function accountId() view returns (uint128)',
  'function addAdmin(address admin)',
  'function admins() view returns (address[] admins_)',
  'function allowance(address owner, address spender) view returns (uint256)',
  'function approve(address spender, uint256 value) returns (bool)',
  'function asset() pure returns (address assetTokenAddress)',
  'function balanceOf(address account) view returns (uint256)',
  'function convertToAssets(uint256 shares) view returns (uint256 assets)',
  'function convertToShares(uint256 assets) view returns (uint256 shares)',
  'function decimals() view returns (uint8)',
  'function deposit(uint256 amount, address receiver) returns (uint256 shares)',
  'function depositFee() view returns (uint256)',
  'function exchangeRate() view returns (uint256 exchangeRate_)',
  'function executeOperation(address, uint256 amount, uint256 premium, address, bytes params) returns (bool)',
  'function feesRecipient() view returns (address)',
  'function initialize(uint256 slippageBuffer_, uint256 managementFee_, uint256 keeperFee_, uint256 performanceFee_, uint256 depositFee_, uint256 redemptionFee_, address feesRecipient_, tuple config)',
  'function keeperFee() view returns (uint256)',
  'function managementFee() view returns (uint256)',
  'function maxAssetTransactionSize() view returns (uint256)',
  'function maxDeposit(address) view returns (uint256 maxAssets)',
  'function maxMint(address) pure returns (uint256)',
  'function maxRedeem(address owner) view returns (uint256 maxShares)',
  'function maxWithdraw(address) pure returns (uint256)',
  'function mint(uint256, address) pure returns (uint256)',
  'function name() view returns (string)',
  'function owner() view returns (address)',
  'function pause()',
  'function paused() view returns (bool)',
  'function performanceFee() view returns (uint256)',
  'function previewDeposit(uint256) pure returns (uint256)',
  'function previewMint(uint256) pure returns (uint256)',
  'function previewRedeem(uint256) pure returns (uint256)',
  'function previewWithdraw(uint256) pure returns (uint256)',
  'function realizeFees()',
  'function rebalance()',
  'function redeem(uint256 shares, address receiver, address owner) returns (uint256 assets)',
  'function redemptionFee() view returns (uint256)',
  'function removeAdmin(address admin)',
  'function renounceOwnership()',
  'function slippageBuffer() view returns (uint256)',
  'function symbol() view returns (string)',
  'function totalAssets() view returns (uint256 totalAssets_)',
  'function totalAssetsCap() view returns (uint256)',
  'function totalSupply() view returns (uint256)',
  'function transfer(address to, uint256 value) returns (bool)',
  'function transferFrom(address from, address to, uint256 value) returns (bool)',
  'function transferOwnership(address newOwner)',
  'function unpause()',
  'function updateDepositFee(uint256 newDepositFee)',
  'function updateFeesRecipient(address newFeesRecipient)',
  'function updateKeeperFee(uint256 newKeeperFee)',
  'function updateManagementFee(uint256 newManagementFee)',
  'function updateMaxAssetTransactionSize(uint256 newMaxAssetTransactionSize)',
  'function updatePerformanceFee(uint256 newPerformanceFee)',
  'function updateRedemptionFee(uint256 newRedemptionFee)',
  'function updateSlippageBuffer(uint256 newSlippageBuffer)',
  'function updateTotalAssetsCap(uint256 newTotalAssetsCap)',
  'function withdraw(uint256, address, address) pure returns (uint256)',
  'error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)',
  'error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)',
  'error ERC20InvalidApprover(address approver)',
  'error ERC20InvalidReceiver(address receiver)',
  'error ERC20InvalidSender(address sender)',
  'error ERC20InvalidSpender(address spender)',
  'error ExceedsMaxAssetTransactionSize()',
  'error ExceedsTotalAssetsCap()',
  'error FunctionNotSupported()',
  'error InsufficientCollateral(uint256 collateral)',
  'error InsufficientShares(uint256 shares)',
  'error InvalidInitialization()',
  'error InvalidPrice()',
  'error InvalidValue()',
  'error NotAuthorized()',
  'error NotEnoughToCoverFees()',
  'error NotInitializing()',
  'error OwnableInvalidOwner(address owner)',
  'error OwnableUnauthorizedAccount(address account)',
  'error Paused()',
  'error PendingOrder()',
  'error PriceNotAvailable()',
];

export async function importPositionManagerDeltaNeutralETH(
  chainId?: number,
  preset?: string
): Promise<{ address: string; abi: string[] }> {
  const deployment = `${Number(chainId).toFixed(0)}-${preset}`;
  switch (deployment) {
    case '8453-andromeda': {
      // https://basescan.org/address/0x038c33792237F1575136110480142073129bB7e6#code
      return { address: '0x038c33792237F1575136110480142073129bB7e6', abi };
    }
    default: {
      throw new Error(`Unsupported deployment ${deployment} for PositionManagerDeltaNeutralETH`);
    }
  }
}
